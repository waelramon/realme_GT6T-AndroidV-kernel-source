name: Build and Release Realme GT 6T Kernel

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      ksun_branch:
        description: "Choose KernelSU Next Branch"
        required: true
        type: choice
        options:
          - stable
          - next
        default: next
      android14-6_1_susfs_branch:
        description: "Choose SusFS Branch for android14-6.1"
        type: string
        default: "gki-android14-6.1"

jobs:
  build-kernel:
    name: build-kernel (RMX3853, sm7450, android14, 6.1, ${{ inputs.ksun_branch }})
    runs-on: ubuntu-latest
    steps:
      - name: Select Appropriate SusFS Branch
        id: get-susfs-branch
        run: |
          KERNEL_STRING="android14-6.1"

          if [[ "$KERNEL_STRING" == "android14-6.1" ]]; then
            SUSFS_BRANCH="${{ inputs.android14-6_1_susfs_branch }}"
          else
            echo "Invalid kernel version or unsupported: $KERNEL_STRING"
            exit 1
          fi

          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Kernel
        uses: WildKernels/OnePlus_KernelSU_SUSFS/.github/actions@main
        with:
          model: RMX3853
          soc: sm7450
          branch: oneplus/sm7675
          manifest: oneplus_nord_4_v.xml
          android_version: android14
          kernel_version: "6.1"
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}

  trigger-release:
    needs:
      - build-kernel
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* Realme GT 6T Kernel With KernelSU Next & SUSFS v1.5.9"
      RELEASE_NOTES: |
        This release contains KernelSU Next and SUSFS v1.5.9

        Module:
        -> https://github.com/sidex15/ksu_module_susfs

        Non-Official Managers:
        -> https://github.com/KernelSU-Next/KernelSU-Next

        Features:
        [+] KernelSU-Next
        [+] SUSFS v1.5.9
        [+] Wireguard Support
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Magic Mount Support
        [+] Ptrace message leak fix for kernels < 5.16
        [+] Manual Hooks [scope_min_manual_hooks_v1.4]
        [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
        [+] BBR v1 Support

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.9-r0"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: true
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/kernel-*/*; do
              if [ -d "$file" ]; then
                  continue
              fi
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
